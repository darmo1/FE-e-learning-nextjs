export const dynamic = "force-dynamic";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Header } from "./(core)/_components/header";
import { Footer } from "./(core)/_components/footer";
import { Container } from "@/components/common/containter";
import { BodyWrapper } from "@/components/common/body-wrapper";
import { Toaster } from "sonner";

import QueryProvider from "@/providers/query-provider";
import { safeFetchUser } from "@/services/users/actions";
import { AuthorizationHeaders } from "../../utils/headers";
import { isEmpty } from "../../utils/common";
import { UserProvider } from "./user-context";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Landing Page",
  description: "Generated by Darmo",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const token = await AuthorizationHeaders();
  const userData = !isEmpty(token)
    ? (await safeFetchUser()).data
    : { isLogged: false, role: "" };

  return (
    <html lang="es">
      <BodyWrapper
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <QueryProvider>
          <UserProvider {...userData}>
            <Header />

            <Container className="grow">{children}</Container>
            <Footer />
            <Toaster />
          </UserProvider>
        </QueryProvider>
      </BodyWrapper>
    </html>
  );
}
